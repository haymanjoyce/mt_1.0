PROJECT DATA
we handle the data as panda dfs
we import and export as csv, xls, json, hdf5, pkl file formats (pandas makes this easy)
dfs are checked and cleaned on import (e.g. using try and except statements)
we can import or export named or all tables
we have option to export without formatting data
we don't distinguish between active and baseline projects
project files do not include baseline styling

CONFIG
json config file for tool settings (holding file locations, for example)

TEMPLATES
hold template project files
acts as reference for default project and format values where needed
this may be where we store the baseline style guide, for example

COMPILE
we will need to turn project data into geometry units
and convert formatting data into something drawsvg2 can read
we can add this to the same df
note, Pandas supports converting date ranges into increments
we may need a command for this (e.g. compile)
note, in drawsvg2 scaling increases borders which we may not want as we will get border bleed

DRAW
and then build svg
we may use more than one project file
we may create drawing with multiple projects showing, one as active and n as baseline
we may create animation out of several active projects
svgdraw2 handles svg elements as objects which then output svg
the objects will be deleted at end of session
so we will need commands to say what data to use and what drawing to create

SAVE
we can save the svg as an svg file
or convert it into html, mpeg, png, pdf, etc.
drawsvg2 supports this and my need Cairo and/or Ghostscript as dependencies

VIEW
we may have command to open file in specific app (e.g. browser or Jupyter Notebook)
we may create our own viewer using QtSVG