DATA
import and export projects to the db as dfs, using pandas (csv, excel, json)
dfs are checked and cleaned on import (e.g. using try and except statements)
we don't export the db itself - it's a .db file on the file system
we can import/export named tables (csv, excel, json) or current project (all tables) (excel, json)
we have --option to export with or without formatting (i.e. meta) data

CONFIG
json config file which includes tool settings/defaults (as opposed to project settings/defaults)
and it will hold db/file location data and logins, etc.

COMPILE
we will need to turn projects (containing project data) into geometry units
note, Pandas supports converting date ranges into increments (so we may be pulling data from db to work on it)
and convert formatting data into syntax that svgdraw2 understands
we will need a command for this (e.g. compile)
this complications can be added to the db as dfs
the same project maybe compiled n formats (e.g. current or baseline)
Note, in drawsvg2 scaling increases borders which we may not want as we will get border overlap/bleed

DRAW
and then build svg elements using geometry units and prepared formatting data
svgdraw2 handles svg elements as objects which then can output the svg
the objects will be deleted at end of session
although, we can pickle objects and store them in the db if this proves necessary
we may be using n compilations to build the drawings or animations (e.g. showing baselines, iterations, animation)
we may have different export formats - svg, mpeg, html (all drawsvg2 options)
so we might have command to draw with options about output format and what compilations to use

VIEW
we can export the svg strings from the db as a file
or open them in an app - like a browser
the app could be a browser
we could build our own browser in QtSVG
or print them into PDF or png using Cairo or Ghostscript
or to Jupyter Notebook