So features we want...

Data handling...
Save to CSV, Excel, JSON, or Pickle (.pkl) (so any/all data can represented as any of these)
Export named tables (format data only, chart data only, all) (default CSV), all tables (default Excel), chart settings (default JSON), tool settings (if different) (default JSON), everything (default .pkl)
Load/merge the data back in after user has edited, added, deleted content
Use Pandas Dataframes to hold data in memory (and not dict of dicts) because Pandas come with lots of this functionality built in and functionality for interacting with data via CLI

Checking data...
Check imported data makes sense and reject it if not (try, except)
This can be an option on loading back in or a standalone command

Processing data...
In this step we need to convert human readable data into arbitrary spatial units
Pandas supports converting date ranges into increments
We do all this conversion in Pandas - as much as possible and so minimise rendering time from Pandas to SVG
We will need to consider scaling here too
In drawsvg2 scaling increases borders which we may not want as we will get border overlap/bleed
Probably want command here for crunching the data
So the outcome is to have all the parameters for generating svg in svgdraw2 api ready

Generating SVG...
Going to use drawsvg2 for this - covered in project journal
Drawsvg2 also supports, with Cairo, outputs in all kinds of format
So we want a command, with options, for generating the chart from the available data
Effectively, this step should just be parsing data from dataframe into drawsvg2

Saving chart...
We want a command for "printing" or saving the chart, with options
One of those options could be, at some point, a web page, by the way - with data loaded so it is dynamic - svgdraw2 does this automatically
We could also build a QtSVG viewer into the app in case user doesn't have a browser/app with which to view the SVG